<!-- Messages/Index.cshtml -->
@model IEnumerable<StoringPassword.Models.Message>

<h2>User Messages</h2>

<p>
    <a href="javascript:void(0)" id="createMessage">Create New Message</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Message</th>
            <th>User</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="messagesTableBody">
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Mesage</td>
                <td>@item.User.Login</td>
                <td>
                    <a href="javascript:void(0)" class="editMessage" data-id="@item.Id">Edit</a>
                    <a href="javascript:void(0)" class="deleteMessage" data-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Модальное окно редактирования -->
<div class="modal" tabindex="-1" role="dialog" id="editMessageModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <input type="hidden" id="editMessageId" />
                    <input type="hidden" id="userId" />
                    <textarea id="editMessageText" rows="4" cols="50"></textarea><br />
                    <button type="button" class="btn btn-primary" id="saveEditMessage">Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно Создания Сообщения -->
<div class="modal" tabindex="-1" role="dialog" id="createMessageModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createMessageForm">
                    <input type="hidden" id="messageId" />
                    <textarea id="messageText" rows="4" cols="50"></textarea><br />
                    <button type="button" class="btn btn-primary" id="saveCreateMessage">Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Ваш код для получения списка сообщений и отображения на странице

            // Пример обработчика для открытия формы создания нового сообщения
            $("#createMessage").click(function () {
                $("#messageId").val("");
                $("#messageText").val("");
                $("#createMessageModal").modal("show");
            });

            // ТУТ ПОФИКСИТЬ CREATE ЧТОБЫ БЫЛ ID СООБЩЕНИЯ И USER
            // Обработчик сохранения созданного сообщения
            $("#saveCreateMessage").click(function () {
                var formData = new FormData();
                formData.append("Mesage", $("#messageText").val());

                $.ajax({
                    type: "POST",
                    url: "/Messages/Create",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        // Обработка успешного создания сообщения
                        // Обновление списка сообщений и закрытие модального окна
                        $("#createMessageModal").modal("hide");
                        refreshMessagesTable();
                    },
                    error: function (error) {
                        // Обработка ошибок
                        console.error("Error creating message:", error);
                    }
                });
            });

            // Обработчик открытия модального окна редактирования
            $(".editMessage").click(function () {
                var messageId = $(this).data("id");

                console.log("Edit button clicked for messageId:", messageId);

                $.ajax({
                    url: "/Messages/Edit/" + messageId,
                    dataType: 'json',
                    success: function (data) {
                        // Проверяем, является ли data объектом
                        if (typeof data === 'object') {
                            $("#editMessageId").val(data.id);
                            $("#editMessageText").val(data.Mesage);
                            $("#userId").val(data.userId);
                            console.log("Received JSON object:", data);
                            $("#editMessageModal").modal("show");
                            // Далее ваш код обновления модального окна
                            // ...
                        } else {
                            // Если data не является объектом, выводим предупреждение
                            console.warn("Received unexpected data format:", data);
                        }
                    },
                    error: function (error) {
                        console.error("Error loading JSON:", error);
                    }
                });
            });

            $("#saveEditMessage").click(function () {
                var formData = new FormData();
                formData.append("Id", $("#editMessageId").val());
                formData.append("Mesage", $("#editMessageText").val());
                formData.append("UserId", $("#userId").val());

                console.log($("#editMessageId").val());
                console.log($("#editMessageText").val());
                console.log($("#userId").val());

                $.ajax({
                    type: "POST",
                    url: "/Messages/Edit",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        // Обработка успешного сохранения
                        // Обновление списка сообщений и закрытие модального окна
                        $("#editMessageModal").modal("hide");
                        refreshMessagesTable();
                    },
                    error: function (error) {
                        // Обработка ошибок
                        console.error("Error saving edited message:", error);
                    }
                });
            });

            // Пример обработчика для отмены формы
            $("#cancelMessage").click(function () {
                $("#messageForm").hide();
            });


            // Удаление
            $(".deleteMessage").click(function () {
                var messageId = $(this).data("id");

                console.log("Delete button clicked for messageId:", messageId);
                let formData = new FormData();
                formData.append("Id", messageId);

                if (confirm("Are you sure you want to delete this message?")) {
                    $.ajax({
                        type: "DELETE",
                        url: '@Url.Action("DeleteConfirmed", "Messages")',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (data) {
                            if (data.success) {
                                // Если удаление прошло успешно, обновляем список сообщений
                                refreshMessagesTable();
                            } else {
                                // Если удаление не удалось, выводим сообщение об ошибке
                                console.error("Error deleting message:", data.message);
                            }
                        },
                        error: function (error) {
                            // Обработка ошибок удаления
                            console.error("Error deleting message:", error);
                        }
                    });
                }
            });

        });



        // Пример функции для обновления списка сообщений
        function refreshMessagesTable() {
            $.get("/Messages/GetJsonUserMessages", function (data) {
                var messages = JSON.parse(data);
                var tableBody = $("#messagesTableBody");
                tableBody.empty();

                messages.forEach(function (message) {
                    var row = $("<tr>");
                    row.append($("<td>").text(message.Mesage));
                    row.append($("<td>").text(message.User.Login));
                    row.append($("<td>").html("<a href='javascript:void(0)' class='editMessage' data-id='" + message.Id + "'>Edit</a> <a href='javascript:void(0)' class='deleteMessage' data-id='" + message.Id + "'>Delete</a>"));
                    tableBody.append(row);
                });
            });
        }
    </script>
}
